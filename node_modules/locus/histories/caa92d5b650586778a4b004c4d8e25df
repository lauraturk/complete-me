this.root.children
this.root
this
trie.root
this.root.children
root.children
newNode
this.root.children === null
this.root.children
trie.root.children
this
currentNode
currentNode.chilcren
currentNode.children
currentNode.children.children
currentNode.children.children = newNode
newNode.children
currentNode = newNode.children
currentNode
currentNode.children = currentNode
currentNode = currentNode.children
currentNode
currentNode.children = newNode
currentNode
exit
currentNode
exit
currentNode
exit
this
currentNode
exit
currentNode
exit
currentNode
exit
currentNode
exit
currentNode
exit 
currentNode
exit
currentNode
exit
currentNode
exit
currentNode
this.root
dis
dis.children
dis.root.children
dis.root.children[c]
dis.root.children['c']
currentNOde
currentNode
currentNode.children
letter
exit
currentNode
currentNode.children
letter
currentNode.children[letter] = newNode
currentNode
currentNode.children
exit
currentNode
exit
currentNode
letter
currentNOde
dis
dis.children
dis.root.children
currentNode
letter
exit
letter
currentNode
letter
exit
currentNode
currentNode = currentNode.children[letter]
currentNode
currentNOde
currentNode
exit
currentNode
currentNode.children[letter]
currentNode.children[letter] = newNode
currentNode
currentNode = currentNode.children[letter]
currentNode
this
exit
currentNode
exit
currentNode
letter
exit
dis
dis.root
dis.root.children
previous
currentNode
exit
previous
currentNode
exit
previous
currentNode
exit
dis
dis.root
dis.root.children
dis.root.children[c]
dis.root.children['c']
dis.root.children['c'].children
dis.root.children['c'].children['a']
dis.root.children['c'].children['a'].children['t']
exit
dis
dis.chidlren
dis.root
dis.root.children
dis.root.children['c']
currentNode
exit
currentNode
exit
currentNode
exit
currentNode
exit
currentNode
exit
currentNOde
currentNode
exit
currentNode
exit
this.root.children.children
currentNode
exit
currentNode
exit
currentNode
exit
dis.root.children.children
dis.root.children
exit
currentNode
exit
dis.root
exit
currentNode
exit
currentNode
exit
currentWord
exit
addressIncrement
exit
addressIncrement
exit
addressIncrement
exit
addressIncrement
exit
addressIncrement
exit
addressIncrement
t.address
cat.address
address
address[t]
address[cat]
[cat]address
root.children
this.root.children
this.root
dis.root
dis
exit
dis
exit
dis
currentChar
exit
currentChar
exit
currentCar
currentChar
exit
currentChar
exit
currentCar
currentChar
g
'g'
g.children
'g'.children
currentChar
exit
currentChar
exit
currentChar
exit
currentChar
exit
currentChar
return g
exit
currentChar
exit
currentChar
exit
currentChar
exit
currentNode
input
suggestions
exit
currentNode
exit
currentNode
isWord
currentNode.isWord
exit
currentNode.isWord
currentNode
currentNode.isWord
currentNode.children
exit
countWords
dis.countWords
dis
CompleteMe.countWords
dictionary.length
foundNode
foundNode.selectionCount
exit
